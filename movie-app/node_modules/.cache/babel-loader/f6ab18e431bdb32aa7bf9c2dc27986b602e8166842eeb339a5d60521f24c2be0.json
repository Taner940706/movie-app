{"ast":null,"code":"var _jsxFileName = \"/home/taner/React/movie-app/src/components/Movies.tsx\";\nimport React from 'react';\nimport MovieItem from './MovieItem';\nimport classes from './Movies.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movies = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: props.items.map(item => /*#__PURE__*/_jsxDEV(MovieItem, {\n        onRemoveMovie: props.onRemoveMovie.bind(null, item.id),\n        movie: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error,\n      children: props.items.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes['error-text'],\n        children: \"Empty list!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","MovieItem","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","props","children","className","main","items","map","item","onRemoveMovie","bind","id","movie","fileName","_jsxFileName","lineNumber","columnNumber","error","length","_c","$RefreshReg$"],"sources":["/home/taner/React/movie-app/src/components/Movies.tsx"],"sourcesContent":["import React from 'react'\nimport Movie from '../models/movie';\nimport MovieItem from './MovieItem';\n\nimport classes from './Movies.module.css';\n\nconst Movies: React.FC<{items: Movie[], onRemoveMovie: (id: string) => void}> = (props) =>  {\n  return <>\n    <div className={classes.main}>\n        {props.items.map((item) => (\n            <MovieItem onRemoveMovie={props.onRemoveMovie.bind(null, item.id)} key={item.id} movie={item} />\n        ))}\n    </div>\n    <div className={classes.error}>\n  {props.items.length===0 && <p className={classes['error-text']}>Empty list!</p>}\n  </div>\n  </>\n}\n\nexport default Movies;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,aAAa;AAEnC,OAAOC,OAAO,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,MAAuE,GAAIC,KAAK,IAAM;EAC1F,oBAAOJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACLL,OAAA;MAAKM,SAAS,EAAER,OAAO,CAACS,IAAK;MAAAF,QAAA,EACxBD,KAAK,CAACI,KAAK,CAACC,GAAG,CAAEC,IAAI,iBAClBV,OAAA,CAACH,SAAS;QAACc,aAAa,EAAEP,KAAK,CAACO,aAAa,CAACC,IAAI,CAAC,IAAI,EAAEF,IAAI,CAACG,EAAE,CAAE;QAAeC,KAAK,EAAEJ;MAAK,GAArBA,IAAI,CAACG,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAClG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNlB,OAAA;MAAKM,SAAS,EAAER,OAAO,CAACqB,KAAM;MAAAd,QAAA,EAC/BD,KAAK,CAACI,KAAK,CAACY,MAAM,KAAG,CAAC,iBAAIpB,OAAA;QAAGM,SAAS,EAAER,OAAO,CAAC,YAAY,CAAE;QAAAO,QAAA,EAAC;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC;EAAA,eACJ,CAAC;AACL,CAAC;AAAAG,EAAA,GAXKlB,MAAuE;AAa7E,eAAeA,MAAM;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
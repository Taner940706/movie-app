{"ast":null,"code":"var _jsxFileName = \"/home/taner/React/movie-app/src/components/AddNewMovie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport classes from './AddNewMovie.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewMovie = props => {\n  _s();\n  const movieNameInputRef = useRef(null);\n  const moviePosterInputRef = useRef(null);\n  const movieScoreInputRef = useRef(null);\n  const movieCommentInputRef = useRef(null);\n  const movieDateInputRef = useRef(null);\n  const movieGenreInputRef = useRef(null);\n  const movieDurationInputRef = useRef(null);\n  const [inputIsBlank, setInputIsBlank] = useState(false);\n  const submitHandler = event => {\n    event.preventDefault();\n    const movieName = movieNameInputRef.current.value;\n    const moviePoster = moviePosterInputRef.current.value;\n    const movieScore = movieScoreInputRef.current.value;\n    const movieComment = movieCommentInputRef.current.value;\n    const movieDate = movieDateInputRef.current.value;\n    const movieGenre = movieGenreInputRef.current.value;\n    const movieDuration = movieDurationInputRef.current.value;\n    if (movieName.trim().length === 0 || moviePoster.trim().length === 0 || movieScore.trim().length === 0 || movieComment.trim().length === 0 || movieDate.length === 0 || movieGenre.length === 0 || movieDuration.length === 0) {\n      setInputIsBlank(true);\n      return;\n    }\n    props.onAddMovie(movieName, moviePoster, movieComment, movieScore, movieDate, movieGenre, movieDuration);\n    movieNameInputRef.current.value = '';\n    moviePosterInputRef.current.value = '';\n    movieScoreInputRef.current.value = '';\n    movieCommentInputRef.current.value = '';\n    setInputIsBlank(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Name: \",\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: movieNameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Poster: \",\n        children: \"Poster: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: moviePosterInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Comment: \",\n        children: \"Comment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: movieCommentInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Score: \",\n        children: \"Score: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ref: movieScoreInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), inputIsBlank && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"Please fill all fields!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNewMovie, \"Y8XrNA6bV0UcF1H6gkt/rtzhCmc=\");\n_c = AddNewMovie;\nexport default AddNewMovie;\nvar _c;\n$RefreshReg$(_c, \"AddNewMovie\");","map":{"version":3,"names":["React","useRef","useState","classes","jsxDEV","_jsxDEV","AddNewMovie","props","_s","movieNameInputRef","moviePosterInputRef","movieScoreInputRef","movieCommentInputRef","movieDateInputRef","movieGenreInputRef","movieDurationInputRef","inputIsBlank","setInputIsBlank","submitHandler","event","preventDefault","movieName","current","value","moviePoster","movieScore","movieComment","movieDate","movieGenre","movieDuration","trim","length","onAddMovie","className","form","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","ref","_c","$RefreshReg$"],"sources":["/home/taner/React/movie-app/src/components/AddNewMovie.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport classes from './AddNewMovie.module.css';\n\nconst AddNewMovie: React.FC<{onAddMovie: (name: string, poster: string, comment: string, score: string) => void}> = (props) => {\n\n    const movieNameInputRef = useRef<HTMLInputElement>(null);\n    const moviePosterInputRef = useRef<HTMLInputElement>(null);\n    const movieScoreInputRef = useRef<HTMLInputElement>(null);\n    const movieCommentInputRef = useRef<HTMLInputElement>(null);\n    const movieDateInputRef = useRef<HTMLInputElement>(null);\n    const movieGenreInputRef = useRef<HTMLInputElement>(null);\n    const movieDurationInputRef = useRef<HTMLInputElement>(null);\n\n    const [inputIsBlank, setInputIsBlank] = useState(false);\n\n\n    const submitHandler = (event: React.FormEvent) =>{\n        event.preventDefault();\n\n        const movieName = movieNameInputRef.current!.value;\n        const moviePoster = moviePosterInputRef.current!.value;\n        const movieScore = movieScoreInputRef.current!.value;\n        const movieComment = movieCommentInputRef.current!.value;\n        const movieDate = movieDateInputRef.current!.value;\n        const movieGenre = movieGenreInputRef.current!.value;\n        const movieDuration = movieDurationInputRef.current!.value;\n\n        if (movieName.trim().length === 0 || moviePoster.trim().length === 0 || movieScore.trim().length === 0 || movieComment.trim().length === 0\n        || movieDate.length === 0 || movieGenre.length === 0 || movieDuration.length === 0){\n            setInputIsBlank(true);\n            return;\n        }\n        props.onAddMovie(movieName, moviePoster, movieComment, movieScore, movieDate, movieGenre, movieDuration);\n        movieNameInputRef.current!.value = '';\n        moviePosterInputRef.current!.value = '';\n        movieScoreInputRef.current!.value = '';\n        movieCommentInputRef.current!.value = '';\n        setInputIsBlank(false);\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitHandler}>\n            <h1>Add New Movie</h1>\n            <div>\n            <label htmlFor=\"Name: \">Name: </label>\n            <input type=\"text\" ref={movieNameInputRef}/>\n            <label htmlFor=\"Poster: \">Poster: </label>\n            <input type=\"text\" ref={moviePosterInputRef}/>\n            <label htmlFor=\"Comment: \">Comment: </label>\n            <input type=\"text\" ref={movieCommentInputRef}/>\n            <label htmlFor=\"Score: \">Score: </label>\n            <input type=\"number\" ref={movieScoreInputRef}/>\n            <button type=\"submit\">Add</button>\n            {inputIsBlank && <p className='error'>Please fill all fields!</p>}\n            </div>\n        </form>\n    )\n\n}\n\nexport default AddNewMovie;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
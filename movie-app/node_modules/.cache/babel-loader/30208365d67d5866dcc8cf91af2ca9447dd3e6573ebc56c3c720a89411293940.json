{"ast":null,"code":"var _jsxFileName = \"/home/taner/React/movie-app/src/components/Movies.tsx\";\nimport React from 'react';\nimport MovieItem from './MovieItem';\nimport classes from './Movies.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movies = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.main,\n      children: [props.items.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes['error-text'],\n        children: \"Empty list!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 34\n      }, this), props.items.map(item => /*#__PURE__*/_jsxDEV(MovieItem, {\n        onRemoveMovie: props.onRemoveMovie.bind(null, item.id),\n        movie: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","MovieItem","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","props","children","className","main","items","length","fileName","_jsxFileName","lineNumber","columnNumber","map","item","onRemoveMovie","bind","id","movie","_c","$RefreshReg$"],"sources":["/home/taner/React/movie-app/src/components/Movies.tsx"],"sourcesContent":["import React from 'react'\nimport Movie from '../models/movie';\nimport MovieItem from './MovieItem';\n\nimport classes from './Movies.module.css';\n\nconst Movies: React.FC<{items: Movie[], onRemoveMovie: (id: string) => void}> = (props) =>  {\n  return <>\n    <div className={classes.main}>\n      {props.items.length===0 && <p className={classes['error-text']}>Empty list!</p>}\n        {props.items.map((item) => (\n            <MovieItem onRemoveMovie={props.onRemoveMovie.bind(null, item.id)} key={item.id} movie={item} />\n        ))}\n    </div>\n  </>\n}\n\nexport default Movies;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,aAAa;AAEnC,OAAOC,OAAO,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,MAAuE,GAAIC,KAAK,IAAM;EAC1F,oBAAOJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACLL,OAAA;MAAKM,SAAS,EAAER,OAAO,CAACS,IAAK;MAAAF,QAAA,GAC1BD,KAAK,CAACI,KAAK,CAACC,MAAM,KAAG,CAAC,iBAAIT,OAAA;QAAGM,SAAS,EAAER,OAAO,CAAC,YAAY,CAAE;QAAAO,QAAA,EAAC;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC5ET,KAAK,CAACI,KAAK,CAACM,GAAG,CAAEC,IAAI,iBAClBf,OAAA,CAACH,SAAS;QAACmB,aAAa,EAAEZ,KAAK,CAACY,aAAa,CAACC,IAAI,CAAC,IAAI,EAAEF,IAAI,CAACG,EAAE,CAAE;QAAeC,KAAK,EAAEJ;MAAK,GAArBA,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAClG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACN,CAAC;AACL,CAAC;AAAAO,EAAA,GATKjB,MAAuE;AAW7E,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}